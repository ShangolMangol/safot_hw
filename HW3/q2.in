fun sum a b c = a + b + c;

structure SumKernel1D = Kernel1D(struct
	type source = int
	type target = int
	val kernel = sum
	fun default _ = 0
end);
structure SumKernel2D = Kernel2D(struct
	type source = int
	type target = int
	fun kernel (x1, x2, x3) (y1, y2, y3) (z1, z2, z3) = 2 * x2 + y2 + 3 * z2
	fun default _ = 0
end);

print "===TEST START===\n";
val test1 = if (SumKernel1D.runKernel [1, 2, 3, 4]) = [3, 6, 9, 7] then "PASSED" else "FAILED";
val test2 = if (zip [1, 2, 3] [4, 5, 6] [7, 8, 9]) = [(1, 4, 7), (2, 5, 8), (3, 6, 9)] then "PASSED" else "FAILED";
val test3 = if (fill false 3) = [false, false, false] then "PASSED" else "FAILED";
val test4 = if (SumKernel2D.runKernel [[1, 2, 3], [4, 5, 6], [7, 8, 9]]) = [[7, 13, 7], [19, 31, 16], [31, 49, 25]] then "PASSED" else "FAILED";