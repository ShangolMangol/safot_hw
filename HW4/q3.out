Standard ML of New Jersey (64-bit) v110.99.2 [built: Sun Mar 20 20:10:23 2022]
[opening hw4_q3.sml]
[opening hw4_q3_def.sml]
datatype 'a seq = Cons of 'a * (unit -> 'a seq) | Nil
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val counter = fn : unit -> int seq
val it = () : unit
type 'a biseq = int * 'a seq * (int * 'a seq) list
exception SeqErr
val new = fn : 'a seq -> int * 'a seq * (int * 'a seq) list
val curr = fn : 'a * 'b seq * 'c -> 'b
val empty = fn : 'a * 'b seq * 'c -> bool
val next = fn :
  int * 'a seq * (int * 'a seq) list -> int * 'a seq * (int * 'a seq) list
val prev = fn :
  int * 'a seq * (int * 'b seq) list -> int * 'b seq * (int * 'b seq) list
- val s = ref (0,Cons (0,fn),[(0,Cons (0,fn))]) :
  (int * int seq * (int * int seq) list) ref
===TEST START===
val it = () : unit
exec: 1
val it = () : unit
exec: 2
val it = () : unit
val it = () : unit
val it = () : unit
exec: 3
val it = () : unit
- 
